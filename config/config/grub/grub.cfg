# -*- mode: conf-space; -*-


# Actual sys reconfig command, see below 
# /gnu/store/cisxgsgp01nh9wqcj9masbfpkpzhha0k-grub-efi-2.12/sbin/grub-install --bootloader-id=Guix --boot-directory //boot --efi-directory /boot/efi

# sudo lvcreate vds5DISKIDsys01 -L 20M -n boot
# sudo mkfs.ext4 /dev/mapper/vdsDISKIDXsys01-boot
# sudo mount /dev/mapper/vdsDISKIDXsys01-boot /mnt
# sudo mkdir /mnt/grub
# sudo cp ~/.setup/grub.cfg /mnt/grub
# sudo mkdir /mnt/grub/themes
# sudo cp  /gnu//store/wlf9ccsl9pmch1dyv5x8c2gdngwn9m5i-grub-image.png /mnt/grub/themes
# sudo mount /boot
# sudo mount /boot/efi
# sudo mount -o remount,rw /boot
# sudo mount -o remount,rw /boot/efi
# guix install grub grub-efi grub-hybrid
# ls /boot/efi/EFI
# sudo grub-install  --boot-directory /mnt/ --efi-directory /boot/efi/ --bootloader-id=Loader
# ls /boot/efi/EFI

## Issue
## Space issue
## rm /sys/firmware/efi/efivars/dump-type0-*

echo " Loading modules..."
insmod part_gpt
insmod fat
insmod chain
insmod part_msdos
insmod ext2
insmod lvm
insmod jpeg
insmod png



function main {
  init
  initLoadEnv
  initFirstBoot
  setTheme
  dummyscan
  genGrubEntries
  # genDirectThemeLoad
  genChangetheme
  genChangeLang
  genMiscEntries
}

function init {
  # Localization configuration.
  set locale_dir=/grub/locale
  set lang=en_US

  # insmod keylayouts
  # keymap /store/l5byvpsw2j7mp23dbl2vjm1vygsfk9xm-grub-keymap.us

  set orgroot=$root
  # set default=saved
  set timeout=5
  set tmoutentry=3

  if loadfont unicode; then
    set gfxmode=auto
    insmod all_video
    insmod gfxterm
  fi
  terminal_output gfxterm
}

function genGrubEntries {
  echo "Scanning, second pass..."
  for efi in (*)/grub/grub.cfg ; do

    regexp --set=1:efi_device '^(\(.*\))' "${efi}"
    regexp --set=1:path '^\(.*\)/(.*)' "${efi}"

    if [ ! -e "${efi_device}/skip" ]; then

        echo " >> Found operating system! <<"
        echo " Path: ${efi}"
        echo " Booting in ${timeout}s..."

        menuentry "EFI Bootable ${efi_device} ${path}" --class GrubEntry ${efi_device} ${path} ${tmoutentry} {

          savedefault

          set efi_device=$2
          set path=$3
          set tmoutentry=$4

          set root=$efi_device
          echo " Booting ${efi_device}/${path} in ${tmoutentry}s..."
          # sleep --interruptible --verbose ${tmoutentry}
          configfile /${path}
          boot
        }
    fi
  done
}

function genDirectThemeLoad {
  for img in /grub/themes/* ; do
    menuentry "Set image ${img}" ${orgroot} ${img} {
      set root=$2
      set img=$3
      if background_image ${img}; then
        set color_normal=light-gray/black
        set color_highlight=yellow/black
      else
        set menu_color_normal=cyan/blue
        set menu_color_highlight=white/blue
      fi
    }
  done
}


function genChangetheme {
  submenu "Change Background" {
  	insmod regexp
  	echo "Getting the list of files in \"/grub/themes\". Please wait..."

    for file in /grub/themes/*; do
      # if not exists then skip
  		if ! test -f "$file"; then continue; fi
      # if same as last selected then skip
  		if [ "$file" == "/grub/themes/${bg}" ]; then continue; fi

  		regexp -s filename "/grub/themes/(.*)" "$file"

      # reached here mean, file is present.
  		if [ -z "$havefile" ]; then set havefile="1"; fi

  		menuentry "${filename}" {
  			bg="$1"
  			background_image "${prefix}/themes/${bg}"
  			save_env bg
  			configfile ${prefix}/grub.cfg
  		}
  	done

  	if [ -z "$havefile" ]; then
  		esccont "Please copy all your PNG, JPG and JPEG files to the \"/grub/themes\" folder."
  	else
  		unset havefile
  		menuentry "Return to the Main menu" {
  			configfile ${prefix}/grub.cfg
  		}
  	fi

  	unset filename
  }
}

function genChangeLang {
  submenu "Change Language" {
  	insmod regexp
  	for langstr in "vi=Tiếng Việt" "en=English" "ast=Asturian; Bable; Leonese; Asturleonese" "ca=català" "zh_CN=中文 (Simplified)" "zh_TW=中文 (Traditional)" "da=dansk" \
                   "nl=Dutch" "en@arabic=English - Arabic" "en@cyrillic=English - Cyrillic" "en@greek=English - Greek" "en@hebrew=English - Hebrew" \
                   "en@piglatin=English - Piglatin" "en@quot=English - Quot" "eo=Esperanto" "fi=Finnish" "fr=français" "gl=Galego" "de=Deutsch" "de@hebrew=German - Hebrew" \
                   "de_CH=German - SWITZERLAND (CH)" "hu=magyar" "hr=hrvatski jezik" "id=Bahasa Indonesia" "it=Italiano" "ja=日本語" "lt=lietuvių kalba" "nb=Norsk Bokmål" \
                   "no=Norwegian" "pl=Polish" "pt_BR=Português" "pa=Panjabi" "ru=русский" "sr=српски језик" "sl=Slovenian" "es=Español" "sv=Svenska" "tr=Türkçe" "uk=Українська"; do

  		regexp -s 2:langname -s 1:langcode '(.*)=(.*)' "$langstr"

      if [ "$langcode" == "$lang" ] -o [ -z "$lang" -a "$langcode" == "en" ] -o [ "$langcode" != "en" -a ! -e /grub/locale/${langcode}.mo ]; then
        continue;
      fi

  		menuentry "${langname}" "$langcode" {
  			  lang="$2"
  			  save_env lang
  			  configfile ${prefix}/grub.cfg
  		}
  	done

  	menuentry "Return to the Main menu" {
  		configfile ${prefix}/grub.cfg
  	}
  }
}


function genMiscEntries {

  if [ "$font" == "unicode-small" ]; then
    fontmenu="Switch to larger font"
  else
    fontmenu="Switch to smaller font"
  fi

  menuentry "${fontmenu}" {

    if [ "$font" != "unicode-small" ]; then
      font=unicode-small;
  	elif [ -z "$lang" ]; then
      font=DejaVuSansMono-large;
    else
      font=unicode-large;
    fi

  	save_env font
  	configfile ${prefix}/grub.cfg
  }

  if [ "${grub_platform}" == efi ]; then
    menuentry "Firmware setup" {
      fwsetup
    }
  fi

  menuentry "Reboot" {
      reboot
  }

  menuentry "Poweroff" {
      halt
  }
}

function setTheme {
  # if background_image /grub/images/grub-image.png; then
  if [ -z "$bg" ]; then
    # set bg=img
    set bg=img.png
  fi

  imgfile=$prefix/themes/$bg

  # echoWait imgfile=$imgfile


  if [ -e $imgfile ]; then
    insmod jpeg
    insmod png
    # echo imgfile=$imgfile exists
    # vsleep 2
    if background_image $imgfile; then
      set color_normal=light-gray/black
      set color_highlight=yellow/black
    else
      set menu_color_normal=cyan/blue
      set menu_color_highlight=white/blue
    fi
  else
    echoWait "imgfile=$imgfile not exists"
    vsleep 10
  fi
}

function dummyscan {
  echo
  echo "Scanning, first pass..."
  for efi in (*)/grub/grub.cfg ; do
    regexp --set=1:efi_device '^\((.*)\)/' "${efi}"
  done
  for img in ${orgroot}/grub/themes/* ; do
    echo $img
  done
}

function echoWaitSec {
  tout=$1
  msg=$2

  echo $msg

  sleep --interruptible --verbose ${tout}
  unset tout
}

function echoWait {
  msg=$1

  echo $msg

  vsleep 2
  unset tout
}

function vsleep {
  sleep --interruptible --verbose $1
}

#################################################
# from https://www.aioboot.com/en/grub2-default-boot-entry/

function initLoadEnv {
  if [ -s $prefix/grubenv ]; then
    set have_grubenv=true
    load_env
    # echo default=$default
    # echo next_entry=$next_entry
    # echo saved_entry=$saved_entry
    # echo prev_saved_entry=$prev_saved_entry
    # echo lang=$lang
    # echo font=$font
    # echo bg=$bg

    # sleep --interruptible --verbose 2
  fi
}

function initFirstBoot {
  if [ "${next_entry}" ] ; then
     set default="${next_entry}"
     set next_entry=
     save_env next_entry
     set boot_once=true
  else
     if [ x"${saved_entry}" = x ] ; then
        set default="0"
     else
        set default="${saved_entry}"
     fi
  fi

  if [ x"${feature_menuentry_id}" = xy ]; then
    menuentry_id_option="--id"
  else
    menuentry_id_option=""
  fi

  export menuentry_id_option

  if [ "${prev_saved_entry}" ]; then
    set saved_entry="${prev_saved_entry}"
    save_env saved_entry
    set prev_saved_entry=
    save_env prev_saved_entry
    set boot_once=true
  fi
}

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}
#################################################


main
echo "Laoded grub configuration"




